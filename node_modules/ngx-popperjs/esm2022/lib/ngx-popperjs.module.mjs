import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
//
import { NgxPopperjsDirective } from "./directives/ngx-popperjs/ngx-popperjs.directive";
import { NgxPopperjsLooseDirective } from "./directives/ngx-popperjs/ngx-popperjs-loose.directive";
import { NgxPopperjsContentComponent } from "./components/ngx-popperjs-content/ngx-popperjs-content.component";
import { NGX_POPPERJS_DEFAULTS } from "./models/ngx-popperjs-defaults.model";
import * as i0 from "@angular/core";
export function provideNgxPopperjsOptions(config = {}) {
    return [
        { provide: NGX_POPPERJS_DEFAULTS, useValue: config },
    ];
}
export class NgxPopperjsModule {
    static forRoot(popperBaseOptions) {
        return {
            ngModule: NgxPopperjsModule,
            providers: [
                provideNgxPopperjsOptions(popperBaseOptions)
            ]
        };
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.0", ngImport: i0, type: NgxPopperjsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.0.0", ngImport: i0, type: NgxPopperjsModule, imports: [CommonModule,
            NgxPopperjsContentComponent,
            NgxPopperjsDirective,
            NgxPopperjsLooseDirective], exports: [NgxPopperjsContentComponent,
            NgxPopperjsDirective,
            NgxPopperjsLooseDirective] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.0.0", ngImport: i0, type: NgxPopperjsModule, providers: [
            provideNgxPopperjsOptions()
        ], imports: [CommonModule] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.0", ngImport: i0, type: NgxPopperjsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        NgxPopperjsContentComponent,
                        NgxPopperjsDirective,
                        NgxPopperjsLooseDirective
                    ],
                    exports: [
                        NgxPopperjsContentComponent,
                        NgxPopperjsDirective,
                        NgxPopperjsLooseDirective
                    ],
                    providers: [
                        provideNgxPopperjsOptions()
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXBvcHBlcmpzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1wb3BwZXJqcy9zcmMvbGliL25neC1wb3BwZXJqcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFzQixRQUFRLEVBQVcsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLEVBQUU7QUFDRixPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxrREFBa0QsQ0FBQztBQUN0RixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSx3REFBd0QsQ0FBQztBQUNqRyxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSxrRUFBa0UsQ0FBQztBQUU3RyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQzs7QUFFM0UsTUFBTSxVQUFVLHlCQUF5QixDQUFDLFNBQTZCLEVBQUU7SUFDckUsT0FBTztRQUNILEVBQUMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUM7S0FDckQsQ0FBQztBQUNOLENBQUM7QUFrQkQsTUFBTSxPQUFPLGlCQUFpQjtJQUVuQixNQUFNLENBQUMsT0FBTyxDQUFDLGlCQUFzQztRQUN4RCxPQUFPO1lBQ0gsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixTQUFTLEVBQUU7Z0JBQ1AseUJBQXlCLENBQUMsaUJBQWlCLENBQUM7YUFDL0M7U0FDSixDQUFDO0lBQ04sQ0FBQzswSEFUUSxpQkFBaUI7MkhBQWpCLGlCQUFpQixZQWR0QixZQUFZO1lBQ1osMkJBQTJCO1lBQzNCLG9CQUFvQjtZQUNwQix5QkFBeUIsYUFHekIsMkJBQTJCO1lBQzNCLG9CQUFvQjtZQUNwQix5QkFBeUI7MkhBTXBCLGlCQUFpQixhQUpmO1lBQ1AseUJBQXlCLEVBQUU7U0FDOUIsWUFaRyxZQUFZOzsyRkFjUCxpQkFBaUI7a0JBaEI3QixRQUFRO21CQUFDO29CQUNOLE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLDJCQUEyQjt3QkFDM0Isb0JBQW9CO3dCQUNwQix5QkFBeUI7cUJBQzVCO29CQUNELE9BQU8sRUFBRTt3QkFDTCwyQkFBMkI7d0JBQzNCLG9CQUFvQjt3QkFDcEIseUJBQXlCO3FCQUM1QjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1AseUJBQXlCLEVBQUU7cUJBQzlCO2lCQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSwgUHJvdmlkZXJ9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XHJcbi8vXHJcbmltcG9ydCB7Tmd4UG9wcGVyanNEaXJlY3RpdmV9IGZyb20gXCIuL2RpcmVjdGl2ZXMvbmd4LXBvcHBlcmpzL25neC1wb3BwZXJqcy5kaXJlY3RpdmVcIjtcclxuaW1wb3J0IHtOZ3hQb3BwZXJqc0xvb3NlRGlyZWN0aXZlfSBmcm9tIFwiLi9kaXJlY3RpdmVzL25neC1wb3BwZXJqcy9uZ3gtcG9wcGVyanMtbG9vc2UuZGlyZWN0aXZlXCI7XHJcbmltcG9ydCB7Tmd4UG9wcGVyanNDb250ZW50Q29tcG9uZW50fSBmcm9tIFwiLi9jb21wb25lbnRzL25neC1wb3BwZXJqcy1jb250ZW50L25neC1wb3BwZXJqcy1jb250ZW50LmNvbXBvbmVudFwiO1xyXG5pbXBvcnQge05neFBvcHBlcmpzT3B0aW9uc30gZnJvbSBcIi4vbW9kZWxzL25neC1wb3BwZXJqcy1vcHRpb25zLm1vZGVsXCI7XHJcbmltcG9ydCB7TkdYX1BPUFBFUkpTX0RFRkFVTFRTfSBmcm9tIFwiLi9tb2RlbHMvbmd4LXBvcHBlcmpzLWRlZmF1bHRzLm1vZGVsXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcHJvdmlkZU5neFBvcHBlcmpzT3B0aW9ucyhjb25maWc6IE5neFBvcHBlcmpzT3B0aW9ucyA9IHt9KTogUHJvdmlkZXJbXSB7XHJcbiAgICByZXR1cm4gW1xyXG4gICAgICAgIHtwcm92aWRlOiBOR1hfUE9QUEVSSlNfREVGQVVMVFMsIHVzZVZhbHVlOiBjb25maWd9LFxyXG4gICAgXTtcclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgTmd4UG9wcGVyanNDb250ZW50Q29tcG9uZW50LFxyXG4gICAgICAgIE5neFBvcHBlcmpzRGlyZWN0aXZlLFxyXG4gICAgICAgIE5neFBvcHBlcmpzTG9vc2VEaXJlY3RpdmVcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgTmd4UG9wcGVyanNDb250ZW50Q29tcG9uZW50LFxyXG4gICAgICAgIE5neFBvcHBlcmpzRGlyZWN0aXZlLFxyXG4gICAgICAgIE5neFBvcHBlcmpzTG9vc2VEaXJlY3RpdmVcclxuICAgIF0sXHJcbiAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICBwcm92aWRlTmd4UG9wcGVyanNPcHRpb25zKClcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5neFBvcHBlcmpzTW9kdWxlIHtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGZvclJvb3QocG9wcGVyQmFzZU9wdGlvbnM/OiBOZ3hQb3BwZXJqc09wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5neFBvcHBlcmpzTW9kdWxlPiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmdNb2R1bGU6IE5neFBvcHBlcmpzTW9kdWxlLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICAgICAgICAgIHByb3ZpZGVOZ3hQb3BwZXJqc09wdGlvbnMocG9wcGVyQmFzZU9wdGlvbnMpXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==