import { AfterViewInit, OnDestroy, TemplateRef } from '@angular/core';
import { Observable, Subscription } from 'rxjs';
import { Channel } from 'stream-chat';
import { ChannelService } from '../channel.service';
import { CustomTemplatesService } from '../custom-templates.service';
import { ThemeService } from '../theme.service';
import { ChannelPreviewContext, DefaultStreamChatGenerics } from '../types';
import { ChannelListToggleService } from './channel-list-toggle.service';
import * as i0 from "@angular/core";
/**
 * The `ChannelList` component renders the list of channels.
 */
export declare class ChannelListComponent implements AfterViewInit, OnDestroy {
    private channelService;
    private channelListToggleService;
    private customTemplatesService;
    private themeService;
    channels$: Observable<Channel<DefaultStreamChatGenerics>[] | undefined>;
    isError$: Observable<boolean>;
    isInitializing$: Observable<boolean>;
    isLoadingMoreChannels: boolean;
    isOpen$: Observable<boolean>;
    hasMoreChannels$: Observable<boolean>;
    customChannelPreviewTemplate: TemplateRef<ChannelPreviewContext> | undefined;
    theme$: Observable<string>;
    subscriptions: Subscription[];
    private container;
    constructor(channelService: ChannelService, channelListToggleService: ChannelListToggleService, customTemplatesService: CustomTemplatesService, themeService: ThemeService);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    loadMoreChannels(): Promise<void>;
    trackByChannelId(index: number, item: Channel<DefaultStreamChatGenerics>): string;
    channelSelected(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChannelListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChannelListComponent, "stream-channel-list", never, {}, {}, never, ["[channel-list-top]", "[channel-list-bottom]"]>;
}
