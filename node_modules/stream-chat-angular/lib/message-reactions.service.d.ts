import { MessageReactionClickDetails, MessageReactionType } from './types';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * The `MessageReactionsService` provides customization options to message [reactions](https://getstream.io/chat/docs/javascript/send_reaction/?language=javascript).
 *
 */
export declare class MessageReactionsService {
    /**
     * The enabled [reactions](https://getstream.io/chat/docs/javascript/send_reaction/?language=javascript) and the associated emoji
     *
     * You can provide any string as a reaction. The emoji can be provided as a string, if you want to use custom images for reactions you have to provide a [custom reactions UI](../../services/CustomTemplatesService/#messagereactionstemplate)
     */
    reactions$: BehaviorSubject<{
        [x: string]: string;
    }>;
    /**
     * By default the [`MessageReactionsComponent`](../../components/MessageReactionsComponent) will display the reacting users when a reaction is clicked. You can override this with your own UI by providing a custom event handler.
     *
     * The event handler can retrieve all reactions of a message inside the active channel using the [`channelService.getMessageReactions` method](../../services/ChannelService/#getmessagereactions)
     */
    customReactionClickHandler?: (details: MessageReactionClickDetails) => void;
    constructor();
    /**
     * Sets the enabled reactions
     */
    set reactions(reactions: {
        [key in MessageReactionType]: string;
    });
    /**
     * Get the currently enabled reactions
     */
    get reactions(): {
        [key in MessageReactionType]: string;
    };
    static ɵfac: i0.ɵɵFactoryDeclaration<MessageReactionsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<MessageReactionsService>;
}
