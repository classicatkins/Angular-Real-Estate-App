import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export declare type Theme = 'light' | 'dark';
/**
 * The `ThemeService` can be used to change the theme of the chat UI and to customize the theme. Our [theming guide](../theming/introduction.mdx) gives a complete overview about the topic.
 */
export declare class ThemeService {
    /**
     * A Subject that can be used to get or set the currently active theme.
     */
    theme$: BehaviorSubject<string>;
    /**
     * Stream chat theme version - this is used internally by some UI components of the SDK, integrators shouldn't need to use this variable
     */
    themeVersion: '1' | '2';
    private _customLightThemeVariables;
    private _customDarkThemeVariables;
    private defaultDarkModeVariables;
    private variablesToDelete;
    constructor();
    /**
     * A getter that returns the currently set custom light theme variables.
     * @deprecated Only use with [theme v1](../concepts/theming-and-css.mdx)
     * @returns An object where the keys are theme variables, and the values are the currently set CSS values.
     */
    get customLightThemeVariables(): {
        [key: string]: string;
    } | undefined;
    /**
     * A setter that can be used to overwrite the values of the CSS theme variables of the light theme.
     * @deprecated Only use with [theme v1](../concepts/theming-and-css.mdx)
     * @param variables An object where the keys are theme variables, and the values are CSS values.
     */
    set customLightThemeVariables(variables: {
        [key: string]: string;
    } | undefined);
    /**
     * A getter that returns the currently set custom dark theme variables.
     * @deprecated Only use with [theme v1](../concepts/theming-and-css.mdx)
     * @returns An object where the keys are theme variables, and the values are the currently set CSS values.
     */
    get customDarkThemeVariables(): {
        [key: string]: string;
    } | undefined;
    /**
     * A setter that can be used to overwrite the values of the CSS theme variables of the dark theme.
     * @deprecated Only use with [theme v1](../concepts/theming-and-css.mdx)
     * @param variables An object where the keys are theme variables, and the values are CSS values.
     */
    set customDarkThemeVariables(variables: {
        [key: string]: string;
    } | undefined);
    private deleteVariables;
    private setVariables;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThemeService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ThemeService>;
}
