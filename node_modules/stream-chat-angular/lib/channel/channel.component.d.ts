import { Observable, Subscription } from 'rxjs';
import { ChannelService } from '../channel.service';
import { ThemeService } from '../theme.service';
import { CustomTemplatesService } from '../custom-templates.service';
import * as i0 from "@angular/core";
/**
 * The `Channel` component is a container component that displays the [`ChannelHeader`](./ChannelHeaderComponent.mdx), [`MessageList`](./MessageListComponent.mdx), [`NotificationList`](./NotificationListComponent.mdx) and [`MessageInput`](./MessageInputComponent.mdx) components. You can also provide the [`Thread`](./ThreadComponent.mdx) component to use message [threads](https://getstream.io/chat/docs/javascript/threads/?language=javascript).
 */
export declare class ChannelComponent {
    private channelService;
    private themeService;
    readonly customTemplatesService: CustomTemplatesService;
    isError$: Observable<boolean>;
    isInitializing$: Observable<boolean>;
    isActiveThread$: Observable<boolean>;
    isActiveChannel$: Observable<boolean>;
    subscriptions: Subscription[];
    theme$: Observable<string>;
    constructor(channelService: ChannelService, themeService: ThemeService, customTemplatesService: CustomTemplatesService);
    static ɵfac: i0.ɵɵFactoryDeclaration<ChannelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChannelComponent, "stream-channel", never, {}, {}, never, ["*", "[name=\"thread\"]"]>;
}
