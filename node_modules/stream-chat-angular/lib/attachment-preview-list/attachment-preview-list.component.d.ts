import { EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
import { ThemeService } from '../theme.service';
import { AttachmentUpload } from '../types';
import * as i0 from "@angular/core";
/**
 * The `AttachmentPreviewList` component displays a preview of the attachments uploaded to a message. Users can delete attachments using the preview component, or retry upload if it failed previously.
 */
export declare class AttachmentPreviewListComponent {
    /**
     * A stream that emits the current file uploads and their states
     */
    attachmentUploads$: Observable<AttachmentUpload[]> | undefined;
    /**
     * An output to notify the parent component if the user tries to retry a failed upload
     */
    readonly retryAttachmentUpload: EventEmitter<File>;
    /**
     * An output to notify the parent component if the user wants to delete a file
     */
    readonly deleteAttachment: EventEmitter<AttachmentUpload<import("../types").DefaultStreamChatGenerics>>;
    themeVersion: '1' | '2';
    constructor(themeService: ThemeService);
    attachmentUploadRetried(file: File): void;
    attachmentDeleted(upload: AttachmentUpload): void;
    trackByFile(_: number, item: AttachmentUpload): File;
    static ɵfac: i0.ɵɵFactoryDeclaration<AttachmentPreviewListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AttachmentPreviewListComponent, "stream-attachment-preview-list", never, { "attachmentUploads$": "attachmentUploads$"; }, { "retryAttachmentUpload": "retryAttachmentUpload"; "deleteAttachment": "deleteAttachment"; }, never, never>;
}
