import { Component, Input } from '@angular/core';
import { v4 as uuidv4 } from 'uuid';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * The `LoadingIndicator` component displays a spinner to indicate that an action is in progress.
 */
export class LoadingIndicatorComponent {
    constructor() {
        /**
         * The size of the indicator (in pixels)
         */
        this.size = 15;
        /**
         * The color of the indicator
         */
        this.color = `var(--str-chat__loading-indicator-color, var(--str-chat__primary-color, '#006CFF'))`;
        this.linearGradientId = uuidv4();
    }
}
LoadingIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: LoadingIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
LoadingIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.5", type: LoadingIndicatorComponent, selector: "stream-loading-indicator", inputs: { size: "size", color: "color" }, ngImport: i0, template: "<div class=\"str-chat__loading-indicator\">\n  <svg\n    [attr.height]=\"size\"\n    viewBox=\"0 0 30 30\"\n    [attr.width]=\"size\"\n    data-testid=\"loading-indicator\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <defs>\n      <linearGradient\n        id=\"{{ linearGradientId }}\"\n        x1=\"50%\"\n        x2=\"50%\"\n        y1=\"0%\"\n        y2=\"100%\"\n      >\n        <stop offset=\"0%\" stop-color=\"#FFF\" stop-opacity=\"0\" />\n        <stop\n          data-testid=\"stop-color\"\n          offset=\"100%\"\n          [attr.stop-color]=\"color\"\n          stop-opacity=\"1\"\n          [ngStyle]=\"{ stopColor: color }\"\n        />\n      </linearGradient>\n    </defs>\n    <path\n      d=\"M2.518 23.321l1.664-1.11A12.988 12.988 0 0 0 15 28c7.18 0 13-5.82 13-13S22.18 2 15 2V0c8.284 0 15 6.716 15 15 0 8.284-6.716 15-15 15-5.206 0-9.792-2.652-12.482-6.679z\"\n      [attr.fill]=\"'url(#' + linearGradientId + ')'\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n</div>\n", directives: [{ type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: LoadingIndicatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'stream-loading-indicator',
                    templateUrl: './loading-indicator.component.html',
                    styles: [],
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { size: [{
                type: Input
            }], color: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1pbmRpY2F0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RyZWFtLWNoYXQtYW5ndWxhci9zcmMvbGliL2xvYWRpbmctaW5kaWNhdG9yL2xvYWRpbmctaW5kaWNhdG9yLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0cmVhbS1jaGF0LWFuZ3VsYXIvc3JjL2xpYi9sb2FkaW5nLWluZGljYXRvci9sb2FkaW5nLWluZGljYXRvci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsRUFBRSxJQUFJLE1BQU0sRUFBRSxNQUFNLE1BQU0sQ0FBQzs7O0FBRXBDOztHQUVHO0FBTUgsTUFBTSxPQUFPLHlCQUF5QjtJQWFwQztRQVpBOztXQUVHO1FBQ00sU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNuQjs7V0FFRztRQUVILFVBQUssR0FBRyxxRkFBcUYsQ0FBQztRQUU5RixxQkFBZ0IsR0FBRyxNQUFNLEVBQUUsQ0FBQztJQUViLENBQUM7O3NIQWJMLHlCQUF5QjswR0FBekIseUJBQXlCLDBHQ1h0QywyK0JBaUNBOzJGRHRCYSx5QkFBeUI7a0JBTHJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsV0FBVyxFQUFFLG9DQUFvQztvQkFDakQsTUFBTSxFQUFFLEVBQUU7aUJBQ1g7MEVBS1UsSUFBSTtzQkFBWixLQUFLO2dCQUtOLEtBQUs7c0JBREosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gJ3V1aWQnO1xuXG4vKipcbiAqIFRoZSBgTG9hZGluZ0luZGljYXRvcmAgY29tcG9uZW50IGRpc3BsYXlzIGEgc3Bpbm5lciB0byBpbmRpY2F0ZSB0aGF0IGFuIGFjdGlvbiBpcyBpbiBwcm9ncmVzcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc3RyZWFtLWxvYWRpbmctaW5kaWNhdG9yJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xvYWRpbmctaW5kaWNhdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVzOiBbXSxcbn0pXG5leHBvcnQgY2xhc3MgTG9hZGluZ0luZGljYXRvckNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgaW5kaWNhdG9yIChpbiBwaXhlbHMpXG4gICAqL1xuICBASW5wdXQoKSBzaXplID0gMTU7XG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGluZGljYXRvclxuICAgKi9cbiAgQElucHV0KClcbiAgY29sb3IgPSBgdmFyKC0tc3RyLWNoYXRfX2xvYWRpbmctaW5kaWNhdG9yLWNvbG9yLCB2YXIoLS1zdHItY2hhdF9fcHJpbWFyeS1jb2xvciwgJyMwMDZDRkYnKSlgO1xuXG4gIGxpbmVhckdyYWRpZW50SWQgPSB1dWlkdjQoKTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG59XG4iLCI8ZGl2IGNsYXNzPVwic3RyLWNoYXRfX2xvYWRpbmctaW5kaWNhdG9yXCI+XG4gIDxzdmdcbiAgICBbYXR0ci5oZWlnaHRdPVwic2l6ZVwiXG4gICAgdmlld0JveD1cIjAgMCAzMCAzMFwiXG4gICAgW2F0dHIud2lkdGhdPVwic2l6ZVwiXG4gICAgZGF0YS10ZXN0aWQ9XCJsb2FkaW5nLWluZGljYXRvclwiXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gID5cbiAgICA8ZGVmcz5cbiAgICAgIDxsaW5lYXJHcmFkaWVudFxuICAgICAgICBpZD1cInt7IGxpbmVhckdyYWRpZW50SWQgfX1cIlxuICAgICAgICB4MT1cIjUwJVwiXG4gICAgICAgIHgyPVwiNTAlXCJcbiAgICAgICAgeTE9XCIwJVwiXG4gICAgICAgIHkyPVwiMTAwJVwiXG4gICAgICA+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cIiNGRkZcIiBzdG9wLW9wYWNpdHk9XCIwXCIgLz5cbiAgICAgICAgPHN0b3BcbiAgICAgICAgICBkYXRhLXRlc3RpZD1cInN0b3AtY29sb3JcIlxuICAgICAgICAgIG9mZnNldD1cIjEwMCVcIlxuICAgICAgICAgIFthdHRyLnN0b3AtY29sb3JdPVwiY29sb3JcIlxuICAgICAgICAgIHN0b3Atb3BhY2l0eT1cIjFcIlxuICAgICAgICAgIFtuZ1N0eWxlXT1cInsgc3RvcENvbG9yOiBjb2xvciB9XCJcbiAgICAgICAgLz5cbiAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG4gICAgPC9kZWZzPlxuICAgIDxwYXRoXG4gICAgICBkPVwiTTIuNTE4IDIzLjMyMWwxLjY2NC0xLjExQTEyLjk4OCAxMi45ODggMCAwIDAgMTUgMjhjNy4xOCAwIDEzLTUuODIgMTMtMTNTMjIuMTggMiAxNSAyVjBjOC4yODQgMCAxNSA2LjcxNiAxNSAxNSAwIDguMjg0LTYuNzE2IDE1LTE1IDE1LTUuMjA2IDAtOS43OTItMi42NTItMTIuNDgyLTYuNjc5elwiXG4gICAgICBbYXR0ci5maWxsXT1cIid1cmwoIycgKyBsaW5lYXJHcmFkaWVudElkICsgJyknXCJcbiAgICAgIGZpbGxSdWxlPVwiZXZlbm9kZFwiXG4gICAgLz5cbiAgPC9zdmc+XG48L2Rpdj5cbiJdfQ==