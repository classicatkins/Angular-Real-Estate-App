import { Injectable } from '@angular/core';
import { en } from '../assets/i18n/en';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
/**
 * The `StreamI18nService` can be used to customize the labels of the chat UI. Our [translation guide](../concepts/translation.mdx) covers this topic in detail.
 */
export class StreamI18nService {
    constructor(translteService) {
        this.translteService = translteService;
    }
    /**
     * Registers the translation to the [ngx-translate](https://github.com/ngx-translate/core) TranslateService.
     * @param lang The language key to register the translation to
     * @param overrides An object which keys are translation keys, and the values are custom translations
     */
    setTranslation(lang = 'en', overrides) {
        if (!this.translteService.defaultLang) {
            this.translteService.defaultLang = lang;
        }
        this.translteService.setTranslation(lang, { streamChat: Object.assign(Object.assign({}, en.streamChat), overrides) }, true);
    }
}
StreamI18nService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: StreamI18nService, deps: [{ token: i1.TranslateService }], target: i0.ɵɵFactoryTarget.Injectable });
StreamI18nService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: StreamI18nService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.5", ngImport: i0, type: StreamI18nService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.TranslateService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyZWFtLWkxOG4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3N0cmVhbS1jaGF0LWFuZ3VsYXIvc3JjL2xpYi9zdHJlYW0taTE4bi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7QUFFdkM7O0dBRUc7QUFJSCxNQUFNLE9BQU8saUJBQWlCO0lBQzVCLFlBQW9CLGVBQWlDO1FBQWpDLG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtJQUFHLENBQUM7SUFFekQ7Ozs7T0FJRztJQUNILGNBQWMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxFQUFFLFNBQXFDO1FBQy9ELElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRTtZQUNyQyxJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7U0FDekM7UUFDRCxJQUFJLENBQUMsZUFBZSxDQUFDLGNBQWMsQ0FDakMsSUFBSSxFQUNKLEVBQUUsVUFBVSxrQ0FBTyxFQUFFLENBQUMsVUFBVSxHQUFLLFNBQVMsQ0FBRSxFQUFFLEVBQ2xELElBQUksQ0FDTCxDQUFDO0lBQ0osQ0FBQzs7OEdBakJVLGlCQUFpQjtrSEFBakIsaUJBQWlCLGNBRmhCLE1BQU07MkZBRVAsaUJBQWlCO2tCQUg3QixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IGVuIH0gZnJvbSAnLi4vYXNzZXRzL2kxOG4vZW4nO1xuXG4vKipcbiAqIFRoZSBgU3RyZWFtSTE4blNlcnZpY2VgIGNhbiBiZSB1c2VkIHRvIGN1c3RvbWl6ZSB0aGUgbGFiZWxzIG9mIHRoZSBjaGF0IFVJLiBPdXIgW3RyYW5zbGF0aW9uIGd1aWRlXSguLi9jb25jZXB0cy90cmFuc2xhdGlvbi5tZHgpIGNvdmVycyB0aGlzIHRvcGljIGluIGRldGFpbC5cbiAqL1xuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFN0cmVhbUkxOG5TZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0cmFuc2x0ZVNlcnZpY2U6IFRyYW5zbGF0ZVNlcnZpY2UpIHt9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyB0aGUgdHJhbnNsYXRpb24gdG8gdGhlIFtuZ3gtdHJhbnNsYXRlXShodHRwczovL2dpdGh1Yi5jb20vbmd4LXRyYW5zbGF0ZS9jb3JlKSBUcmFuc2xhdGVTZXJ2aWNlLlxuICAgKiBAcGFyYW0gbGFuZyBUaGUgbGFuZ3VhZ2Uga2V5IHRvIHJlZ2lzdGVyIHRoZSB0cmFuc2xhdGlvbiB0b1xuICAgKiBAcGFyYW0gb3ZlcnJpZGVzIEFuIG9iamVjdCB3aGljaCBrZXlzIGFyZSB0cmFuc2xhdGlvbiBrZXlzLCBhbmQgdGhlIHZhbHVlcyBhcmUgY3VzdG9tIHRyYW5zbGF0aW9uc1xuICAgKi9cbiAgc2V0VHJhbnNsYXRpb24obGFuZyA9ICdlbicsIG92ZXJyaWRlcz86IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0pIHtcbiAgICBpZiAoIXRoaXMudHJhbnNsdGVTZXJ2aWNlLmRlZmF1bHRMYW5nKSB7XG4gICAgICB0aGlzLnRyYW5zbHRlU2VydmljZS5kZWZhdWx0TGFuZyA9IGxhbmc7XG4gICAgfVxuICAgIHRoaXMudHJhbnNsdGVTZXJ2aWNlLnNldFRyYW5zbGF0aW9uKFxuICAgICAgbGFuZyxcbiAgICAgIHsgc3RyZWFtQ2hhdDogeyAuLi5lbi5zdHJlYW1DaGF0LCAuLi5vdmVycmlkZXMgfSB9LFxuICAgICAgdHJ1ZVxuICAgICk7XG4gIH1cbn1cbiJdfQ==